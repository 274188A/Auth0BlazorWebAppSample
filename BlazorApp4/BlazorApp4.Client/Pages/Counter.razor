@page "/counter"
@using BlazorApp4.Client.Handlers
@using MediatR
@using Microsoft.AspNetCore.Authorization

@rendermode InteractiveAuto
@inject IMediator Mediator
@attribute [Authorize]

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="SayHello">SayHello</button>
<p role="status">Say: @say</p>


@code {
    private int currentCount = 0;
    private string say = string.Empty;

    [SupplyParameterFromForm]
    public string? text { get; set; }

    private bool isSaving = false;

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private async Task SayHello()
    {        
        say = (await Mediator.Send(new SayHelloRequest())).Response;
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private async void HandleSubmit()
    {

        isSaving = true;
        await Task.Delay(2000);

        isSaving = false;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            await SayHello();
        }
    }
}
